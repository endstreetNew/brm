@inherits LayoutComponentBase
@implements IDisposable

@* @inject SessionService sessionservice*@
@inject StaticService sservice 
@inject ActiveUser _ConnectedUser
@inject ActiveUserList _ConnectedUserList


<div class="grid">
    <div class="user">
        <p class="site-title" style="text-align:center">
            <img ID="Logo" src="images/sassa_logoSmall.jpg" style="height: 100px;" />
        </p>
    </div>
    <div class="header">
        <div class="float-right">
            <p class="site-title">
                Beneficiary Records Management
            </p>
            <LoginDisplay /><span style="font-size: 0.875em;">Users (@_ConnectedUserList.Users.Count())</span>
        </div>
    </div>
    <div class="crumbs">
        <BrmNav></BrmNav>
    </div>
    <div class="main">
        <div class="content px-4">
            <ToastAlert />
            @if (@Status == "")
            {
                @Body
            }
            else
            {
                <p> @Status</p>
            }
        </div>
    </div>
</div>

@code
{
    protected string Status = "Initializing session..";
    protected override async Task OnInitializedAsync()
    {
        try
        {
            // if (sessionservice.session.IsBrmUser())
            // {
            //     sessionservice.session.Office = await sservice.GetUserLocalOffice(sessionservice.session.SamName, sessionservice.session.IsInRole("GRP_BRM_Supervisors") ? "Y" : "N");
            //     Status = "";
            //     _ConnectedUser = new ActiveUser() { Name = sessionservice.session.SamName };
            //     if (!_ConnectedUserList.Users.Contains(_ConnectedUser))
            //     {
            //         _ConnectedUserList.Users.Add(_ConnectedUser);
            //     }
            // }
            // else
            // {
            //     Status = "No Brm Roles for this user;";
            // }
        }
        catch(Exception ex)
        {
            Status = ex.Message;
        }

    }

    // Don't forget to remove `ConnectedUser` from
    // `ConnectedUserList` on dispose.
    public void Dispose()
    {
        _ConnectedUserList.Users.Remove(_ConnectedUser);
    }
}
