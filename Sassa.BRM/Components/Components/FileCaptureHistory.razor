@inject BRMDbService db

@implements IDisposable

<div id="HistoryGrid">
    @if (items != null)
    {
        <div class="row">
            <div class="col-12">
                <table class="table table-sm" style="font-size:x-small;">
                    <thead>
                        <tr>
                            <th scope="col">CLM Unique Code</th>
                            <th scope="col">BRM File no</th>
                            <th scope="col">User</th>
                            <th scope="col">ID no</th>
                            <th scope="col">Name and Surname</th>
                            <th scope="col">Grant Type</th>
                            <th scope="col">Reg Type </th>
                            <th scope="col">App Date </th>
                        </tr>
                    </thead>
                    <tbody>

                        @foreach (var u in items)
                        {
                            <tr>
                                <td>@u.UnqFileNo</td>
                                <td>@u.BrmBarcode</td>
                                <td>@u.UpdatedByAd</td>
                                <td>@u.ApplicantNo</td>
                                <td>@u.UserFirstname + @u.UserLastname</td>
                                <td>@u.GrantType</td>
                                <td>@u.ApplicationStatus</td>
                                <td>@(u.TransDate == null ? "" : ((DateTime)u.TransDate).ToShortDateString())</td>
                            </tr>
                        }

                    </tbody>
                </table>
            </div>
        </div>
    }
    else
    {
        <div style="padding: 10px 0 5px 0;">
            <p>No data. </p>
        </div>
    }
</div>

@code {

    [Parameter]
    public string? txtSearchId { get; set; }

    public List<DcFileDeleted> items { get; set; } = new List<DcFileDeleted>();

    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrEmpty(txtSearchId) && (txtSearchId.Length == 13))
        {
            items = await db.GetDeleteHistory(txtSearchId);
        }
    }

    public void Dispose()
    {
        items.Clear();
    }
}
