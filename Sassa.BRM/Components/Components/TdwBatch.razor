@inject Navigation Navigate
@inject SessionService sessionservice
@inject TdwBatchService db
@inject IAlertService toast
@inject IJSRuntime Js
@inject IWebHostEnvironment env

@inject ReportDataService rs


@using System.Text
@using System.IO;
@using Sassa.BRM.Data.ViewModels;


<TabControl>
    <TabPage Text="Batching" Id="1" Enabled="@(sessionservice.session!.Office!.OfficeType != "LO" && sessionservice.session.IsInRole("GRP_BRM_Monitoring"))">
            <div class="whiteArea col">
                <div class="row">
                    <div class="col">
                        <div class="row">
                            <div class="col">
                                <div class="input-group mb-1">
                                    <span class="input-group-text">From Date</span>
                                    <input class="form-control" type="date" @bind="period.FromDate">
                                </div>
                            </div>
                            <div class="col">
                                <div class="input-group mb-1">
                                    <span class="input-group-text">To Date</span>
                                    <input class="form-control" type="date" @bind="period.ToDate">
                                </div>
                            </div>
                            <div class="col">
                                <div class="input-group mb-1">
                                    <span class="input-group-text">BoxNo</span>
                                    <input class="form-control" type="text" @bind="boxSearch">
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-2">
                        <button class="btn btn-primary active float-right" Text="Load" @onclick="btnLoadBoxes_Click">Load </button>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="whiteArea col">
                    @if (boxfiles != null)
                    {
                        if (boxfiles.count == 0)
                        {
                            <div class="row">
                                <div class="col">
                                    <h5>No Closed Boxes ready for dispatch.</h5>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="row">
                                <div>
                                    <div class="input-group mb-3">
                                        <button type="button" class="btn btn-warning btn-sm active" style="width: 160px; margin: 5px 0 5px;" @onclick="@(() => btnPrint_Click())" disabled="@(!boxfiles.result.Where(b => b.IsSelected).Any())">Dispatch</button>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="whiteArea col">
                                    <div class="alert alert-danger" role="alert">
                                        Dispatching boxes to TDW will permanently lock the selected boxes!
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <table class="table table-sm" style="font-size:small;">
                                    <thead>
                                        <tr>
                                            <th scope="col">Select</th>
                                            <th scope="col">Box No</th>
                                            <th scope="col">MiniBoxes</th>
                                            <th scope="col">LC Files</th>
                                            <th scope="col">Region</th>
                                            <th scope="col">Unlock</th>

                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (TdwBatchViewModel p in boxfiles.result)
                                        {
                                            <tr>
                                                <td>
                                                    <div style="vertical-align: middle; display: table-cell; padding: 0 5px 0 5px;">
                                                        <input type="checkbox" @bind="@p.IsSelected" />
                                                    </div>
                                                </td>
                                                <td>@p.BoxNo</td>
                                                <td>@p.MiniBoxes</td>
                                                <td>@p.Files</td>
                                                <td>@p.Region</td>
                                                <td>
                                                    <div class="input-group mb-3">
                                                        @if(p.IsLocked || p.TdwBatchNo != 0 || p.TdwSendDate != null)
                                                        {
                                                            <button type="button" class="btn btn-primary btn-sm" style="width: 160px; margin: 5px 0 5px;" @onclick="@(() => btnUnlock_Click(@p.BoxNo))">Unlock box </button>
                                                        }
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                                <Pager Paged="OnPaged" TotalSize="@boxfiles.count" PageSize="20"></Pager>
                            </div>
                        }
                    }
                </div>
            </div>

    </TabPage>
    <TabPage Text="Batch History" Id="2" Enabled="@(sessionservice.session.Office.OfficeType != "LO" && sessionservice.session.IsInRole("GRP_BRM_Monitoring"))">

                 <div class="whiteArea col">
                    <div class="row">
                        <div class="col">
                            <div class="row">
                                <div class="col">
                                    <div class="input-group mb-1">
                                        <span class="input-group-text">From Date</span>
                                        <input class="form-control" type="date" @bind="period.FromDate">
                                    </div>
                                </div>
                                <div class="col">
                                    <div class="input-group mb-1">
                                        <span class="input-group-text">To Date</span>
                                        <input class="form-control" type="date" @bind="period.ToDate">
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-2">
                            <button class="btn btn-primary active float-right" Text="Load" @onclick="btnLoadBatches_Click">Load </button>
                        </div>
                    </div>
                 </div> 

        @if (batchedfiles != null)
        {
            @if (batchedfiles.count > 0)
            {
                <div class="row">

                    <table class="table table-sm" style="font-size:small;">
                        <thead>
                            <tr>
                                <th scope="col">Batch No</th>
                                <th scope="col">User</th>
                                <th scope="col">Boxes</th>
                                <th scope="col">LC Files</th>
                                <th scope="col">Region</th>
                                <th scope="col">Date</th>
                                <th scope="col">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (TdwBatchViewModel p in batchedfiles.result)
                            {
                                <tr>
                                    <td>@p.TdwBatchNo</td>
                                    <td>@p.User</td>
                                    <td>@p.Boxes</td>
                                    <td>@p.Files</td>
                                    <td>@p.Region</td>
                                    <td>@p.TdwSendDate</td>
                                    <td>
                                        <button type="button" class="btn btn-primary btn-sm" style="width: 160px; margin: 0px 0 5px;" @onclick="@(() => btnPrint_Click(@p.TdwBatchNo))">Reprint Cover</button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <Pager Paged="OnHistoryPaged" TotalSize="@batchedfiles.count" PageSize="20"></Pager>
                 </div>
               
            }
            else
            {
                <p> No Dispatched Files history</p>
            }
        }
    </TabPage>
    <TabPage Text="Dispatch History" Id="3" Enabled = "true">
        @if (files != null)
        {
            <div class="whiteArea col">
                <div class="row">

                    <table class="table table-sm" style="font-size:small;">
                        <thead>
                            <tr>
                                <th scope="col">ReportName</th>
                                <th scope="col">User</th>
                                <th scope="col">Type</th>
                                <th scope="col">Region</th>
                                <th scope="col">Date</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (CsvListItem p in files.result)
                            {
                                <tr>
                                    <td>@p.ReportName</td>
                                    <td>@p.UserName</td>
                                    <td>@p.FileName</td>
                                    <td>@p.RegionCode</td>
                                    <td>@p.ReportDate</td>
                                    <td>
                                        <div class="input-group mb-3">
                                            <button type="button" class="btn btn-primary btn-sm" style="width: 160px; margin: 5px 0 5px;" @onclick="@(() => btnResend_Click(@p.FileName))">Resend batch</button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <Pager Paged="OnDispatchHistoryPaged" TotalSize="@files.count" PageSize="20"></Pager>
                </div>
            </div>
        }
    </TabPage>
</TabControl>


@code {
    protected string boxSearch;

    PagedResult<TdwBatchViewModel> batchedfiles;
    PagedResult<TdwBatchViewModel> boxfiles;
    PagedResult<CsvListItem> files;

    ReportPeriod period;

    int page = 1;
    int historypage = 1;
    int sendpage = 1;


    protected override async Task OnInitializedAsync()
    {
        period = new ReportPeriod(){FromDate = DateTime.Now.AddDays(-180) , ToDate = DateTime.Now};
        sessionservice.session.BookMark.BoxingTab = 4;
        await Task.CompletedTask;

    }
    //Loader boxes for batching tab
    protected async Task btnLoadBoxes_Click()
    {
        if(!string.IsNullOrEmpty(boxSearch))
        {
            boxfiles = await db.GetBox(boxSearch);
        }
        else
        {
            await OnPaged(page);
        }

    }

    protected async Task btnLoadBatches_Click()
    {
        await OnHistoryPaged(historypage);

    }

    protected async Task btnPrint_Click()
    {
        int tdwBatch = await db.CreateTdwBatch(boxfiles.result.Where(b => b.IsSelected).ToList());
        //Todo: send tdwBatch data to TDW
        btnPrint_Click(tdwBatch);
        boxfiles = await db.GetAllBoxes(page, period);
    }

    protected void btnPrint_Click(int tdwBatch)
    {
        //Display and print the cover
        Navigate.NavigateTo($"tdwbatchcover/{tdwBatch}");
    }
    protected async Task btnUnlock_Click(string boxNo)
    {
        await db.UnlockBox(boxNo);
        boxSearch = null;
        boxfiles = null;
        await OnPaged(page);
    }


    protected async Task OnHistoryPaged(int _page)
    {
        try
        {

            historypage = _page;
            //todo:fix
            batchedfiles = await db.GetTdwBatches(historypage,period);

        }
        catch
        {

        }

    }

    /// <summary>
    /// Get all the boxes to be BATCHED
    ///  </summary>
    /// <param name="_page"></param>
    /// <returns></returns>
    protected async Task OnPaged(int _page)
    {
        page = _page;
        //todo:fix
        boxfiles = await db.GetAllBoxes(page,period);
    }

    protected async Task OnDispatchHistoryPaged(int _page)
    {
            sendpage = _page;
            files = rs.GetTdwFiles(sessionservice.session.Office.RegionCode, sessionservice.session.SamName, sendpage);
            await Task.CompletedTask;
    }
    protected void btnResend_Click(string fileName)
    {
        db.ResendFile(fileName);
    }
}
