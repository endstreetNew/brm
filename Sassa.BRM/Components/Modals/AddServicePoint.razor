@* @inject BRMDbService db *@
@inject StaticService sservice
@inject IAlertService toast
<!-- Bootstrap Modal Dialog -->
<div class="modal" tabindex="-1" style="display:block;" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header" style="background-color: #0973B6">
                <h5 class="modal-title">Add new Fixed service point</h5>
            </div>
            <div class="modal-body">
                <div>
                    <div class="input-group input-group-sm">
                        <span class="input-group-text input-group-sm">Service Point name</span>
                        <input type="text" class="form-control" @bind="servicePoint.ServicePointName" />
                    </div>
                    <div class="input-group input-group-sm">
                        <span class="input-group-text input-group-sm">Brm Office</span>
                        <select class="form-select" @bind="servicePoint.OfficeId">
                            @foreach (var bOffice in regionOffices)
                            {
                                <option value="@bOffice.OfficeId">@bOffice.OfficeName</option>
                            }
                        </select>
                    </div>
                </div>
                <br />
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="btnCancel_Click">Cancel</button>
                    <button ID="btnFileDetail" class="btn btn-primary active" @onclick="btnOk_Click" >Ok</button>
                </div>
            </div>
        </div>
    </div>
</div>


@code {
    [Parameter]
    public string RegionId { get; set; } = "";
    [Parameter]
    public EventCallback Ok { get; set; }
    [Parameter]
    public EventCallback Cancel { get; set; }

    protected DcFixedServicePoint servicePoint { get; set; } = new();
    protected List<DcLocalOffice> regionOffices = new();


    protected bool IsLoaded = false;


    protected override void OnInitialized()
    {
        regionOffices = StaticDataService.LocalOffices.Where(lo => lo.RegionId == RegionId).OrderBy(o => o.OfficeName).ToList();
        servicePoint = new DcFixedServicePoint();
    }

    protected async Task btnOk_Click()
    {
        if (string.IsNullOrEmpty(servicePoint.ServicePointName) || string.IsNullOrEmpty(servicePoint.OfficeId))
        {
            toast.Error("Servicepoint name  and Office is required.");
        }
        else
        {
            await sservice.CreateServicePoint(servicePoint);
            await Ok.InvokeAsync();
        }
    }
    protected void btnCancel_Click()
    {
        Cancel.InvokeAsync();
    }

}
