@inject ReportDataService rs

@* Old *@
@inject Navigation Navigate
@inject BRMDbService db
@inject IAlertService toast
@inject IJSRuntime Js
@inject IWebHostEnvironment env

@inject ReportDataService rd

@using System.Text
@using System.IO;
@using Sassa.BRM.Data.ViewModels;

@* <TabControl>
    <TabPage Text="Batching" Id="1" Enabled="true">
        <div class="whiteArea col">
            <div class="row">
                <div class="whiteArea col">
                    @if (boxfiles.count > 0)
                    {
                        <div class="row">
                            <div>
                                <div class="input-group mb-3">
                                    <button type="button" class="btn btn-warning btn-sm active" style="width: 160px; margin: 5px 0 5px;" @onclick="@(() => btnPrint_Click())" disabled="@(!boxfiles.result.Where(b => b.IsSelected).Any())">Dispatch</button>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <table class="table table-sm" style="font-size:small;">
                                <thead>
                                    <tr>
                                        <th scope="col">Select</th>
                                        <th scope="col">Box No</th>
                                        <th scope="col">MiniBoxes</th>
                                        <th scope="col">LC Files</th>
                                        <th scope="col">Region</th>

                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (TdwBatchViewModel p in boxfiles.result)
                                    {
                                        <tr>
                                            <td>
                                                <div style="vertical-align: middle; display: table-cell; padding: 0 5px 0 5px;">
                                                    <input type="checkbox" @bind="@p.IsSelected" />
                                                </div>
                                            </td>
                                            <td>@p.BoxNo</td>
                                            <td>@p.MiniBoxes</td>
                                            <td>@p.Files</td>
                                            <td>@p.Region</td>

                                        </tr>
                                    }
                                </tbody>
                            </table>
                            <Pager Paged="OnPaged" TotalSize="@boxfiles.count" PageSize="20"></Pager>
                        </div>
                    }
                    else
                    {
                        <div class="row">
                            <div class="col">
                                <h5>No Closed Boxes ready for dispatch.</h5>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

    </TabPage>
    <TabPage Text="History" Id="2" Enabled="true"> *@
        @if (files.count > 0)
        {
            <div class="row">

                <table class="table table-sm" style="font-size:small;">
                    <thead>
                        <tr>
                            <th scope="col">Box No</th>
                            <th scope="col">Files</th>
                            <th scope="col">User</th>
                            <th scope="col">Type</th>
                            <th scope="col">Region</th>
                            <th scope="col">Date</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (CsvListItem p in files.result)
                        {
                            <tr>
                                <td>lookup</td>
                                <td>@p.ReportName</td>
                                <td>@p.UserName</td>
                                <td>@p.FileName</td>
                                <td>@p.RegionCode</td>
                                <td>@p.ReportDate</td>
                                <td>
                                    <div class="input-group mb-3">
                                        <button type="button" class="btn btn-primary btn-sm" style="width: 160px; margin: 5px 0 5px;" @onclick="@(() => btnResend_Click(@p.FileName))">Resend box</button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <Pager Paged="OnPaged" TotalSize="@files.count" PageSize="20"></Pager>
            </div>
        }
@*     </TabPage>
</TabControl> *@


@code {

    PagedResult<CsvListItem> files;

    //Old
    [Parameter]
    public string boxNo { get; set; }

    protected bool BoxLocked;
    protected string RemoveBarcode;

    protected string searchText;

    //private ElementReference brmInput;

    protected Reboxing rebox = new Reboxing();
    //bool loaded = false;

    PagedResult<TdwBatchViewModel> boxfiles = new PagedResult<TdwBatchViewModel>();
    PagedResult<TdwBatchViewModel> batchedfiles = new PagedResult<TdwBatchViewModel>();
    //---



    int page = 1;
    int historypage = 1;


    protected override void OnInitialized()
    {
        OnPaged(page);
    }

    protected void btnResend_Click(string fileName)
    {
        //int tdwBatch = await db.CreateTdwBatch(boxfiles.result.Where(b => b.IsSelected).ToList());
        // btnPrint_Click(tdwBatch);
        db.ResendFile(fileName);
    }

    // protected void btnPrint_Click(int tdwBatch)
    // {
    //     Navigate.NavigateTo($"tdwbatchcover/{tdwBatch}");
    // }

    protected void btnPrint_Click(int tdwBatch)
    {
        Navigate.NavigateTo($"tdwbatchcover/{tdwBatch}");
    }

    protected void OnPaged(int _page)
    {
        page = _page;
        files = rs.GetFiles(db.session.Office.RegionCode, db.session.SamName, page);
    }

    // protected void OnHistoryPaged(int _page)
    // {
    //     historypage = _page;
    //     batchedfiles = db.GetHistoryBoxes(historypage);
    // }

}
