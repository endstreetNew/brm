@inject IAlertService toast
@inject BRMDbService db
@inject Navigation Navigate
<!-- Bootstrap Modal Dialog -->
<div class="modal" tabindex="-1" style="display:block;" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <div class="container">
                    <div class="row">
                        <div class="col">
                            <img src="images/sassa_logoSmall.jpg" width="100" />
                        </div>
                        <div class="col">
                            <h4>Transport Cover</h4>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-body">
                <div>

                    <div class="input-group mb-2">
                        <span class="input-group-text" style="width: 140px;">TDW Waybill No</span>
                        <input type="text" @bind-value="@tdwWaybill" class="form-control" disabled="@(!string.IsNullOrEmpty(waybill.WaybillNo))">
                    </div>

                    <div class="input-group mb-2" style="width:50%">
                        <span class="input-group-text" style="width: 140px;">Courier</span>
                        <input type="text" @bind-value="@courier" class="form-control" disabled="@(!string.IsNullOrEmpty(waybill.WaybillNo))">
                    </div>

                </div>
                <br />
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="btnCancel_Click">Cancel</button>
                    <button ID="btnFileDetail" class="btn btn-primary active" @onclick="btnOk_Click">Ok</button>
                </div>
            </div>
        </div>
    </div>
</div>


@code {
    [Parameter]
    public Waybill waybill { get; set; }

    [Parameter]
    public EventCallback Ok { get; set; }
    [Parameter]
    public EventCallback Cancel { get; set; }

    string courier = "TDW";
    string tdwWaybill = "";

    protected override void OnInitialized()
    {
        if (!string.IsNullOrEmpty(waybill.WaybillNo))
        {
            tdwWaybill = waybill.WaybillNo;
        }
    }

    protected async void btnOk_Click()
    {
        if (string.IsNullOrEmpty(tdwWaybill))
        {
            toast.Error("The TDW waybill no is required.");
            return;
        }
        await db.DispatchWaybill(waybill.BrmWaybill, tdwWaybill);
        Navigate.NavigateTo($"transportcover/{waybill.BrmWaybill}");
        await Ok.InvokeAsync();
    }
    protected void btnCancel_Click()
    {
        Cancel.InvokeAsync();
    }

}
