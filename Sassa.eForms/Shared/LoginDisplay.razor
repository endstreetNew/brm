
@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization

@inject NavigationManager navigationManager
@inject SassaUserStore store;


<AuthorizeView>
    <Authorized>
        <ul class="nav justify-content-center">
            <li class="nav-item">
                <a class="nav-link" href="Account/Manage/@context.User.Identity.Name">Hello, @GetUser(context.User.Identity.Name)</a>
            </li>
            <li class="nav-item">
                <a href="sassaaccount/logout" class="nav-link">Log out</a>
            </li>
        </ul>
    </Authorized>
    <NotAuthorized>
        <ul class="nav justify-content-center">
@*            <li class="nav-item"  disabled>
                <a class="nav-link" href="Account/Register" disabled>Register</a>
            </li>*@
            <li class="nav-item">
                <a class="nav-link" href="Account/Signin/0">Log in</a>
            </li>
        </ul>

    </NotAuthorized>
</AuthorizeView>
@code{

    protected string GetUser(string email)
    {
        try
        {
            var user = store.GetSassaUser(email).GetAwaiter().GetResult();
            return user.FullName;
        }
        catch
        {
            navigationManager.NavigateTo("sassaaccount/logout", forceLoad: true);
            return null;
        }
    }
}
