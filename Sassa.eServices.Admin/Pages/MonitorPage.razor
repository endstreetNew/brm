@page "/monitor"
@inject HttpClient Http
@using Microsoft.JSInterop
@inject IJSRuntime Js
@inject AssetService assetservice;


<button type="button" class="btn btn-primary btn-sm" @onclick="@Print">Print</button>
<button type="button" class="btn btn-primary btn-sm" @onclick="@Save">Save</button>
<div id="pdf">

    <h4>Sassa Asset status:  @DateTime.Now.ToString()</h4>

    @if (assets == null)
    {
        <p>Checking status</p>
    }
    else
    {
        @*@if (asset != null)
        {
            <ModalSubscribe asset="@asset"></ModalSubscribe>
        }*@
        <table class="table table-sm" style="font-size:small;">
            <thead>
                <tr>
                    <th scope="col">Type</th>
                    <th scope="col">AssetName</th>
                    <th scope="col">Status</th>
                    @*<th></th>*@
                </tr>
            </thead>
            <tbody>

                @foreach (Asset a in assets)
                {
                    <tr>
                        <td>@a.AssetType</td>
                        <td>@a.AssetName</td>
                        <td>@a.Status</td>
                        @*<td><button type="button" class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#subscribeModal" @onclick="@(() => btnSubscribe_Click(a))">Subscribe</button></td>*@
                    </tr>
                }

            </tbody>
        </table>

    }
</div>

@code {
    private List<Asset> assets;
    private Asset asset;
    protected override async Task OnInitializedAsync()
    {
#if DEBUG
        await Task.Delay(10000);
#endif
        assets = await assetservice.GetAssets();

        //await TimerElapsedHandler();
    }

    private async Task Save()
    {
        string content = await Js.InvokeAsync<string>("getHTML");
        string style = "<head><meta charset=\"utf - 8\" />" +
                    "<meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\" />" +
                    "<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\" crossorigin=\"anonymous\">" +
                    "</head>";
        content = style + content;
        await assetservice.SaveCSRepors(content);
        //await Task.Delay(TimeSpan.FromHours(24));
    }

    protected void btnSubscribe_Click(Asset _asset)
    {
        asset = _asset;
        StateHasChanged();
    }
    private async Task Print()
    {
        await Js.InvokeVoidAsync("printPage");

    }


}
